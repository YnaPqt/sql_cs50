--Problem to Solve

--You are a mail clerk for the city of Boston and, as such, you oversee the delivery of mail across the city. For the most part, all packages sent are eventually delivered. Except, every once in while, a mystery falls into your lap: a missing package! For each customer that comes to you with a report of a missing package, your job is to determine:

    --The current address (or location!) of their missing package
    --The type of address or location (e.g. residential, business, etc.)
    --The contents of the package

All you know is what the customers themselves will tell you. To solve each mystery, you’ll need to use the mail delivery service’s database, packages.db, which contains data on the transit of packages around the city. Using just the information in the database, your task is to help each customer find their missing package.

Schema
packages.db represents all recent package deliveries in the city of Boston. To do so, packages.db represents the following entities:

    --Drivers, who are the people that deliver packages
    --The packages themselves
    --Addresses, such as 1234 Main Street
    --Scans of packages, which represent confirmations a delivery driver picked up or dropped off a given package

Within packages.db, you’ll find several tables that implement the relationships described in the ER diagram above. Click the drop-downs below to learn more about the schema of each individual table.
addresses table

The addresses table contains the following columns:

    id, which is the ID of the address
    address, which is the street address itself (i.e., 7660 Sharon Street)
    type, which is the type of address (i.e., residential, commercial, etc.)

drivers table

The drivers table contains the following columns:

    id, which is the ID of the driver
    name, which is the first name of the driver

packages table

The packages table contains the following columns:

    id, which is the ID of the package
    contents, which contains the contents of the package
    from_address_id, which is the ID of the address from which the package was sent
    to_address_id, which is the ID of the address to which the package was sent. It’s not necessarily where it ended up!

scans table

The scans table contains the following columns:

    id, which is the ID of the scan
    driver_id, which is the ID of the driver who created the scan
    package_id, which is the ID of the package scanned
    address_id, which is the ID of the address where the package was scanned
    action, which indicates whether the package was picked up (“Pick”) or dropped off (“Drop”)
    timestamp, which is the day and time at which the package was scanned

Specification
For this problem, equally as important as finding the packages is the process that you use to do so. In log.sql, keep a log of all SQL queries that you run on the database. Above each query, label each with a comment: in SQL, comments are any lines that begin with --, per the below:
-- This is a SQL comment

The comment should describe why you’re running the query and what information you’re hoping to get out of that particular query. You can use also comments to add additional notes about your thought process as you solve each mystery: ultimately, this file should serve as evidence of the process you used to find each package!

Once you find the location of a package, complete each of the lines in answers.txt by filling in details about the location of the package, as well as its contents. Be sure not to change any of the existing text in the file or to add any other lines to the file!
